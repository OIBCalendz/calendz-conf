version: '3.7'

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

services:
  calendz-api-calendar:
    container_name: calendz-api-calendar
    hostname: calendz-api-calendar
    build:
      context: ../../calendz-api-calendar/
      dockerfile: Dockerfile
    image: calendz-api-calendar:1.0.0
    restart: on-failure
    volumes:
      - ../../calendz-api-calendar:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    networks: 
      - frontend
      - backend
    depends_on:
      - calendz-database
      - calendz-redis
    command: npm run dev

  calendz-api:
    container_name: calendz-api
    hostname: calendz-api
    build:
      context: ../../calendz-api/
      dockerfile: Dockerfile
    image: calendz-api:1.0.0
    restart: on-failure
    volumes:
      - ../../calendz-api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3001:3001"
    networks:
      - frontend
      - backend
    depends_on:
      - calendz-database
    command: npm run dev

  calendz-database:
    container_name: calendz-database
    hostname: calendz-database
    image: mongo:3.6
    restart: on-failure
    ports:
      - "27017:27017"
    networks: 
      - backend
    environment:
      MONGO_INITDB_DATABASE: calendz
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password

  calendz-front:
    container_name: calendz-front
    hostname: calendz-front
    build:
      context: ../../calendz-front
      dockerfile: Dockerfile
    image: calendz-front:1.0.0
    restart: on-failure
    volumes:
      - ../../calendz-front:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 8080:8080
    networks: 
      - frontend
    depends_on:
      - calendz-api
      - calendz-api-calendar
    command: npm run serve

  calendz-redis:
    container_name: calendz-redis
    hostname: calendz-redis
    image: redis:5.0.6-alpine3.10
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks: 
      - backend
    command: redis-server --requirepass imasecret